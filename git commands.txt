git config -l
git config --list

git config --global
git config --system
git config --local
git config --worktree

git config user.name "name"
git config user.email "email"
git config alias."alias_name" "value" --global

git config credential.useHttpPath true (authentication with http enable)

git clone <URL>
git clone <URL> <folder_name>

git init (initialize git )
rm -rf .git (remove git)

git status

touch .gitignore (create a file)

git add -A (to track files)
git add --a
git add --all
git add . (to insert file into stage area)

git mv "name" "new name" (rename)
git rm "filename" (remove)

git restore --staged "file name" (unstaged a file)

git rm --cached "file_name" (untrack)
git rm "file_name" --cache (untrack)
git reset (untrack all files)

git checkout -- "file name" (remove changes and return to last commited stage)
git checkout -f (remove changes and return all files to previous commited stage)

git commit -m "message"
git commit -a -m (skip staging area and commit directly)

git diff (diff b/w modified and staged)
git diff --staged (diff b/w staged with last commited)

git log
git log -(argument)
-p  (difference)
-p -n (n=number of commits)
--stat (short summary)

--pretty=oneline
--pretty=short
--pretty=full

--since=n.days (n=number of days)
--since=n.months (n=number of months)
--since=n.years (n=number of years)

Format and Filters
git log --pretty=format:"any string"
git log --pretty=format:"%h -- %an"
i.e     %h=hash     %an=author name     %ae=author email

git remote
git remote add <REMOTE-NAME> <URL>
git remote -v
git push -u <REMOTE-NAME> <BRANCH>

git commit --amend (edit a commit or amend a change)
i = insert (opens vim editor)
esc + :wq (to exit from vim)

Generating a new SSH key
ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
(t = type) (b = bytes) (C = comment)
cat id_key (to display the key)

Start or Kill ssh-agent
eval "$(ssh-agent -s)" (Agent start)
eval "$(ssh-agent -k)" (Agent kill)

Adding your SSH key to the ssh-agent
ssh-add <privateKey>

git stash
git stash pop
git stash apply
git stash drop

git branch (branch list)
git branch -v (branch list with commit details)

reset commit username and email
git rebase -i HEAD~2 --exec "git commit --amend --reset-author --no-edit"
